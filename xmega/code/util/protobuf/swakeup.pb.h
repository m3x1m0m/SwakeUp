/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Sun Apr 23 23:58:48 2017. */

#ifndef PB_SWAKEUP_PB_H_INCLUDED
#define PB_SWAKEUP_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _MsgType {
    MsgType_MSG_TYPE_NONE = 0,
    MsgType_MSG_TYPE_POWER = 1,
    MsgType_MSG_TUPE_LOCATION = 16,
    MsgType_MSG_TYPE_TIME = 17,
    MsgType_MSG_TYPE_DATE = 18,
    MsgType_MSG_TYPE_WEATHER = 19,
    MsgType_MSG_TYPE_SOCIAL = 20,
    MsgType_MSG_TYPE_MAIL = 21
} MsgType;
#define _MsgType_MIN MsgType_MSG_TYPE_NONE
#define _MsgType_MAX MsgType_MSG_TYPE_MAIL
#define _MsgType_ARRAYSIZE ((MsgType)(MsgType_MSG_TYPE_MAIL+1))

typedef enum _Weather {
    Weather_WEATHER_SUNNY = 0,
    Weather_WEATHER_RAINY = 1,
    Weather_WEATHER_SNOWY = 2
} Weather;
#define _Weather_MIN Weather_WEATHER_SUNNY
#define _Weather_MAX Weather_WEATHER_SNOWY
#define _Weather_ARRAYSIZE ((Weather)(Weather_WEATHER_SNOWY+1))

/* Struct definitions */
typedef struct _Date {
    uint8_t year;
    uint8_t month;
    uint8_t day;
/* @@protoc_insertion_point(struct:Date) */
} Date;

typedef struct _Location {
    char country[8];
    char city[8];
/* @@protoc_insertion_point(struct:Location) */
} Location;

typedef struct _Time {
    uint8_t hour;
    uint8_t minute;
    uint8_t second;
/* @@protoc_insertion_point(struct:Time) */
} Time;

typedef struct _MsgFrame {
    MsgType typ;
    bool request;
    pb_size_t which_pl;
    union {
        Location location;
        Time time;
        Date date;
        Weather weather;
    } pl;
/* @@protoc_insertion_point(struct:MsgFrame) */
} MsgFrame;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Location_init_default                    {"", ""}
#define Time_init_default                        {0, 0, 0}
#define Date_init_default                        {0, 0, 0}
#define MsgFrame_init_default                    {(MsgType)0, 0, 0, {Location_init_default}}
#define Location_init_zero                       {"", ""}
#define Time_init_zero                           {0, 0, 0}
#define Date_init_zero                           {0, 0, 0}
#define MsgFrame_init_zero                       {(MsgType)0, 0, 0, {Location_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define Date_year_tag                            1
#define Date_month_tag                           2
#define Date_day_tag                             3
#define Location_country_tag                     1
#define Location_city_tag                        2
#define Time_hour_tag                            1
#define Time_minute_tag                          2
#define Time_second_tag                          3
#define MsgFrame_location_tag                    16
#define MsgFrame_time_tag                        17
#define MsgFrame_date_tag                        18
#define MsgFrame_weather_tag                     19
#define MsgFrame_typ_tag                         1
#define MsgFrame_request_tag                     2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Location_fields[3];
extern const pb_field_t Time_fields[4];
extern const pb_field_t Date_fields[4];
extern const pb_field_t MsgFrame_fields[7];

/* Maximum encoded size of messages (where known) */
#define Location_size                            20
#define Time_size                                18
#define Date_size                                18
#define MsgFrame_size                            27

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SWAKEUP_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
